// Elgamal implementation.

package Question3;

import java.math.BigInteger;

public class Elgamal
{
	public static void main(String args[])
	{
		// Array of input text. For simplicity.
		int InputArray[][] = { { 44143, 28200 }, { 2540, 54984 }, { 16679, 36748 }, { 49097, 43888 }, { 99, 14410 }, { 42504, 51231 }, { 49269, 43516 }, { 34056, 50316 }, { 39427, 27401 },
				{ 17682, 12515 }, { 2885, 39767 }, { 40790, 10911 }, { 3236, 5873 }, { 43012, 14897 }, { 51762, 12936 }, { 14401, 10646 }, { 48353, 15831 }, { 50985, 33416 }, { 10230, 42721 },
				{ 6714, 51871 }, { 12785, 19713 }, { 42427, 47572 }, { 37476, 30673 }, { 18837, 44233 }, { 35278, 43885 }, { 35268, 36869 }, { 46142, 6772 }, { 29573, 39944 }, { 46594, 25072 },
				{ 19401, 5132 }, { 2602, 38551 }, { 14406, 39001 }, { 34595, 37020 }, { 15991, 24011 }, { 6695, 46508 }, { 27879, 7793 }, { 1298, 4642 }, { 40000, 54358 }, { 46271, 32567 },
				{ 49772, 13671 }, { 35671, 3584 }, { 39659, 1474 }, { 51650, 41148 }, { 30208, 46432 }, { 55307, 28457 }, { 626, 40237 }, { 54421, 47113 }, { 23813, 40126 }, { 28024, 22921 },
				{ 42020, 18955 }, { 36180, 6187 }, { 36573, 10946 }, { 26240, 44163 }, { 11935, 3454 }, { 34408, 25399 }, { 51954, 44012 }, { 48015, 11200 }, { 11336, 15246 }, { 40241, 3800 },
				{ 1938, 13151 }, { 17709, 42661 }, { 12509, 5869 }, { 11662, 40947 }, { 25640, 25888 }, { 46422, 30199 }, { 2064, 43536 }, { 20821, 46607 }, { 27131, 32142 }, { 47699, 47595 },
				{ 20370, 13063 }, { 46526, 15431 }, { 42284, 52340 }, { 53420, 38691 }, { 51282, 49679 }, { 7271, 1691 }, { 14388, 9655 }, { 31048, 39345 }, { 36411, 47325 }, { 16439, 38927 },
				{ 46281, 37873 }, { 24138, 16705 }, { 35089, 22317 }, { 42579, 11717 }, { 48310, 8708 }, { 19821, 34836 }, { 12247, 43723 }, { 41088, 39790 }, { 20709, 44734 }, { 30431, 29040 },
				{ 4154, 45038 }, { 749, 40185 }, { 4199, 19837 }, { 52580, 1944 }, { 216, 22097 }, { 42909, 26735 }, { 42747, 37624 }, { 48777, 55068 }, { 49407, 25081 }, { 17949, 4871 },
				{ 15475, 22163 }, { 31927, 41785 }, { 10645, 44621 }, { 17314, 850 }, { 38337, 40419 }, { 46807, 7807 }, { 2162, 39620 }, { 37269, 8859 }, { 24591, 11303 }, { 27395, 26259 },
				{ 44007, 910 }, { 18260, 41084 }, { 19627, 43564 }, { 16737, 19523 }, { 54361, 2921 }, { 24164, 41926 }, { 27785, 17055 }, { 37249, 37826 }, { 11713, 10184 }, { 34298, 476 },
				{ 45037, 36763 }, { 21658, 37043 }, { 29569, 26041 }, { 11704, 26375 }, { 37713, 55154 }, { 27099, 51036 }, { 39505, 25520 }, { 35044, 20587 }, { 46549, 5954 }, { 35997, 8102 },
				{ 6345, 39386 }, { 48663, 44281 } };
				
		// Value of p. (given)
		BigInteger p = new BigInteger("55579");
		// Value of a given.
		int a = 3;
		// Value of Alpha given.
		BigInteger Alpha = new BigInteger("7901");
		String FinalPlainText = "";
		for (int k = 0; k < 131; k++)
		{
			BigInteger X = new BigInteger(String.valueOf(InputArray[k][0]));
			BigInteger Y = new BigInteger(String.valueOf(InputArray[k][1]));
			// Implementing dk(y1, y2)= y2(y1^a)^-1 mod p formula for
			// decryption.
			int PlainText = ((Y.multiply((X.pow(a)).modInverse(p))).mod(p)).intValue();
			// Convert to english letters using convention given in 5.12
			// problem.
			for (int i = 0; i < 26; i++)
			{
				for (int j = 0; j < 26; j++)
				{
					for (int l = 0; l < 26; l++)
					{
						int Sum = (676 * i) + (26 * j) + (l);
						if (Sum == PlainText)
						{
							FinalPlainText = FinalPlainText + Character.toString((char) (i + 65)) + Character.toString((char) (j + 65)) + Character.toString((char) (l + 65));
						}
					}
				}
			}
		}
		// Final plain text.
		System.out.println(" Plain Text : " + FinalPlainText);
	}
	
}
